{"version":3,"sources":["header/Header.js","cart/Popup.js","cart/Checkout.js","cart/Rigthcart.js","cart/Checkoutarea.js","cart/Cart.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","Popup","props","handleCount","e","setState","count","target","value","handleCart","state","inputRef","current","focus","id","showNext","data","length","showPrev","cart","React","createRef","bind","onClick","this","closePopup","alt","img","src","name","desc","catagory","price","ref","type","onChange","Button","variant","disabled","btndis","Checkout","total","tax","setShow","Rightcart","useState","show","cartShow","setCartShow","width","setWidth","i","cartItem","parseInt","style","display","map","key","image","deleteFromCart","class","decrement","increment","clearCart","Checkoutarea","des","Cart","handleOnImageClick","showComponent","showId","handleClearCart","showPayment","handleDelete","console","log","itemIndex","findIndex","item","allItem","splice","handleIncrement","itemId","Item","handleDecrement","handleClick","icount","arrayMatch","ele","push","error","isLoaded","totalItem","expand","height","fetch","then","res","json","items","Card","Img","Body","Title","Text","App","cartProps","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.da8fa931.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport'./Header.css'\n\n\nexport default class Header extends Component\n{\n    render(){\n\n        return(\n            <div className=\"main_header\">\n                <div className=\"heading\"> shopping cart</div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './Popup.css'\nimport {  Button } from 'react-bootstrap'\n\n\nclass Popup extends React.Component {\n   \n    constructor(props)\n    {\n        super(props)\n        this.state={\n            id : this.props.id,\n            data : this.props.data,\n            cart : this.props.cart,\n            count : 0,\n         }\n        \n        this.inputRef = React.createRef()\n\n        this.showPrev = this.showPrev.bind(this)\n        this.showNext = this.showNext.bind(this)\n        this.handleCart = this.handleCart.bind(this)\n        this.handleCount = this.handleCount.bind(this)\n    }\n    handleCount = (e) =>\n    {\n        this.setState({\n            count : e.target.value\n        })\n        \n     }\n    handleCart = () =>\n    {   \n        if(this.state.count===0)\n        {\n            this.inputRef.current.focus()\n        }\n        else\n        {\n            this.props.handleCart(this.state.id,this.state.count)\n        }\n    }\n\n    showNext = ()=>\n    {\n        \n        if(this.state.data.length === this.state.id + 1)\n        {\n            this.setState({\n                id : this.state.id = 0\n            })\n        }\n        else{\n            this.setState({\n                id : this.state.id +1\n            })\n        }\n    }\n    showPrev = ()=>\n    {\n            if(this.state.id !== 0 )\n            {\n                this.setState({\n                    id:this.state.id - 1\n                })\n            }\n    }\n    render() {\n        return (\n            <div className='popup'>\n                <div className=\"container\">\n                <button className=\"btnClose\" onClick={this.props.closePopup}> X </button>\n                    <div className=\"product_image\">\n                        <img  alt={this.state.data[this.state.id].img } src={this.state.data[this.state.id].img}></img>\n                    </div>\n                    <div className=\"value\">\n                        <p id=\"name\">Name:- {this.state.data[this.state.id].name}</p>\n                        <p id=\"desc\">Desc :- {this.state.data[this.state.id].desc}</p>\n                        <p id=\"cat\">catagory :- {this.state.data[this.state.id].catagory}</p>\n                        <p id=\"price\">Price :- ${this.state.data[this.state.id].price}</p>\n                        <div className=\"add_cart_div\">\n                            \n                            <input className=\"cart_inp\" ref={this.inputRef} type=\"text\" value={this.state.count} onChange={this.handleCount}></input>\n                           \n                            <Button \n                                className=\"add\"  \n                                variant=\"primary\"\n                                 onClick = {this.handleCart}\n                                >Add To Cart</Button>\n                        </div>\n                        \n                    </div>\n                </div>\n                <div className=\"btn_div\">\n                    <button className=\"btnNextPrev\" disabled={this.state.btndis} onClick={() => { this.showPrev()}}> Prev</button>\n                    <button className=\"btnNextPrev\" onClick={() => { this.showNext()}}> Next</button>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Popup;","import React, { Component } from 'react'\nimport './Checkout.css'\nexport default class Checkout extends Component\n{\n    constructor(props)\n    {\n        super(props)\n        this.state ={\n            total : this.props.price,\n            tax : this.props.tax,\n            \n        }\n        \n    }\n    render()\n    {\n        return(\n            <div className=\"checkout_container\">\n               \n                <div className=\"bill\">\n                <button className=\"btn_close\" onClick={()=>this.props.setShow(false)}> X </button>\n                    <p id=\"header\">Checkout</p>\n                    <p id=\"description\">We accept <i className=\"fa fa-cc-visa\"/> <i className=\"fa fa-cc-mastercard\"/> <i className=\"fa fa-cc-amex\"/></p>\n                    <p id=\"sub_total\">Subtotal :- ${this.state.total} </p>\n                    <p id=\"tax\">Tax :- ${this.state.tax} </p>\n                    <p id=\"total\">Total :- ${this.state.tax + this.state.total} </p>\n                    <p id=\"description\">This is where our payment processor goes</p>\n                </div>\n               \n\n            </div>\n        )\n    }\n}","import React, { useState } from 'react'\nimport './Rigthcart.css'\nimport { Button } from 'react-bootstrap'\nimport Checkout from './Checkout.js'\n\n// expand cart \n\nfunction Rightcart(props) {\n    let count = 0\n    let price = 0\n    let tax = 0\n    \n    const [show, setShow] = useState(false)\n    const [cartShow , setCartShow] = useState(\"none\")\n    const [width , setWidth] = useState(\"60px\")\n\n    for (let i = 0; i < props.cartItem.length; i++) {\n        count += parseInt(props.cartItem[i].count)\n        price += parseInt(props.cartItem[i].price)\n    }\n    tax = (price * 5 / 100)\n    \n    function expandHandler() {\n        \n        if(cartShow === \"\")\n        {\n            setCartShow(\"none\")\n            setWidth(\"60px\")\n        }\n        else{\n            setCartShow(\"\")\n            setWidth(\"400px\")\n        }\n        \n    }\n    \n    function clearCart(){\n        props.clearCart()\n        setCartShow(\"none\")\n        setWidth(\"60px\")\n    }\n   \n    return (\n        <>\n            {show ? <Checkout price={price} tax={tax} setShow={setShow} /> : null}\n\n            <div className=\"cart_main\" style={{width:width}}>\n                \n                <div className=\"count_cart\" onClick={expandHandler}>\n                    <div className=\"cart\"   >\n                        {count} <i className=\"fa fa-shopping-cart\"></i>\n                    </div>\n                </div>\n\n                <div className=\"cart_table\" style={{display:cartShow}}>\n                    <table className=\"table\">\n                        <tbody>\n                            {props.cartItem.map((data) => (\n                                // <tr></tr>\n                                <tr key={data.id}>\n                                    <td id=\"image_cart\">\n                                        <div className=\"inner_image_div\">\n                                        \n                                        <img src={data.image} alt={data.name}/>\n                                        <button className=\"del\" value={data.name} onClick={props.deleteFromCart}>\n                                        <i class=\"fa fa-times\"></i>\n                                        </button> \n                                        \n                                        </div>\n                                    </td>\n                                    <td id=\"count\"> \n                                        <div className=\"counter\">\n                                        <Button className=\"dec\" variant=\"primary\" value={data.name } onClick={props.decrement}>-</Button>\n                                        <span>{data.count}</span>\n                                        <Button className=\"inc\" variant=\"primary\"  value={data.name } onClick={props.increment} >+</Button>\n                                         </div>\n                                    </td>\n                                    <td id=\"name\">{data.name}</td>\n                                    <td id=\"price\" >$ {data.price}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n\n                    </table>\n                </div>\n                \n                <div className=\"price\" style={{display:cartShow}} >\n                    <p>${price}</p>\n                </div>\n                <div className=\"button\" style={{display:cartShow}}>\n                    <Button className=\"btn_show_Checkout\" variant=\"primary\" onClick={clearCart}> Clear-Cart</Button>\n                    <Button className=\"btn_show_Checkout\" variant=\"primary\" onClick={() => setShow(true)}> Check Out</Button>\n                </div>\n            </div>\n\n\n        </>\n    )\n}\n\nexport default Rightcart","import React,{useState} from 'react'\nimport './Checkoutarea.css'\nimport Checkout from './Checkout.js'\n\nimport { Button } from 'react-bootstrap'\nfunction Checkoutarea(props) {\n   \n    \n    let price = 0\n    let tax = 0\n    let count = 0 \n   \n    for(var i = 0 ; i<props.cartItem.length ;i++)\n    {\n        price += parseInt(props.cartItem[i].price)\n        count += parseInt(props.cartItem[i].count)\n    }\n    tax = (price*5/100)\n    const [show , setShow] = useState(false)\n       \n    return (\n\n        <div className=\"container\">\n            <div className=\"header\">Checkout Area</div>\n            <div className=\"display_table\">\n                 {show ? <Checkout price = {price} tax = {tax}  setShow = {setShow}/>: null}  \n                <p className=\"cart_count\">{count}<i className=\"fa fa-shopping-cart\"></i></p>\n                <table className=\"table_cart\">\n                    <thead>\n                    <tr>\n                        <th>Id</th>\n                        <th>Name</th>\n                        <th>Description</th>\n                        <th>Quantity</th>\n                        <th>Price</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {props.cartItem.map((data)=>(\n                        <tr key={data.id}>\n                            <td>{data.id}</td>\n                            <td>{data.name}</td>\n                            <td>{data.des}</td>\n                            <td>{data.count}</td>\n                            <td>${data.price}</td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n            \n                <div className=\"total\">\n                    <h3>SubTotal :- {price}</h3>\n                    <h3>Tax :- {tax}</h3>\n                    <h2>Total :- {tax + price}</h2>\n                </div> \n                <div className=\"div_show_checkout\">\n                    <Button className=\"btn_show_Checkout\" variant=\"primary\" onClick={()=>setShow(true)}> Check Out</Button>\n                </div>\n                \n            </div>\n           \n        </div>\n\n    )\n}\n\nexport default Checkoutarea\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, { Component } from 'react'\nimport { Card, Button } from 'react-bootstrap'\nimport Popup from './Popup'\nimport Rightcart from './Rigthcart.js'\nimport './Cart.css'\n\nimport Checkoutarea from './Checkoutarea.js'\n\nexport default class Cart extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            error: null,\n            isLoaded: false,\n            Item: [],\n            Cart: [],\n            totalItem: 0,\n            showComponent: false,\n            showPayment: false,\n            showId: '',\n\n            expand: true,\n            height: \"\",\n            width: \"\"\n\n        }\n        this.handleClick = this.handleClick.bind(this)\n        this.handleOnImageClick = this.handleOnImageClick.bind(this)\n        this.handleClearCart = this.handleClearCart.bind(this)\n\n        this.handleIncrement = this.handleIncrement.bind(this)\n        this.handleDecrement = this.handleDecrement.bind(this)\n        this.handleDelete = this.handleDelete.bind(this)\n\n\n    }\n    // show pop-up\n    handleOnImageClick = (id) => {\n        this.setState({\n            showComponent: !this.state.showComponent,\n            showId: id\n        })\n    }\n    handleClearCart = () => {\n        this.setState({\n            Cart: [],\n            showPayment: false\n        })\n    }\n\n    handleDelete = (e) => {\n        const name = e.target.value\n        console.log(name)\n\n        const itemIndex = this.state.Cart.findIndex(item => item.name === name)\n        console.log(itemIndex)\n\n        let allItem = [...this.state.Cart]\n        allItem.splice(itemIndex, 1)\n\n        this.setState({\n            Cart: allItem\n        })\n    }\n\n    handleIncrement = (e) => {\n\n        const name = e.target.value\n\n        const itemIndex = this.state.Cart.findIndex(item => item.name === name)\n        const itemId = this.state.Item.findIndex(item => item.name === name)\n        let allItem = [...this.state.Cart]\n\n        allItem[itemIndex] = {\n            ...allItem[itemIndex], \"count\": allItem[itemIndex].count + 1,\n            \"price\": parseInt(allItem[itemIndex].price) + parseInt(this.state.Item[itemId].price)\n        }\n\n        this.setState({\n            Cart: allItem\n        })\n\n    }\n    handleDecrement = (e) => {\n\n        const name = e.target.value\n\n        const itemIndex = this.state.Cart.findIndex(item => item.name === name)\n        const itemId = this.state.Item.findIndex(item => item.name === name)\n\n        let allItem = [...this.state.Cart]\n\n        if (allItem[itemIndex].count - 1 > 0) {\n            allItem[itemIndex] = {\n                ...allItem[itemIndex], \"count\": allItem[itemIndex].count - 1,\n                \"price\": parseInt(allItem[itemIndex].price) - parseInt(this.state.Item[itemId].price)\n            }\n            this.setState({\n                Cart: allItem\n            })\n\n        }\n        else {\n            allItem.splice(itemIndex, 1)\n            this.setState({\n                Cart: allItem\n            })\n        }\n\n    }\n\n\n    //add items to cart\n    handleClick = (id, icount) => {\n        let arrayMatch = false\n        let count = parseInt(icount)\n\n        // console.log(\"id\" , id)\n        // console.log(\"count\",icount)\n\n        this.setState({\n            showPayment: true\n        })\n\n\n        for (var i = 0; i < this.state.Cart.length; i++) {\n            let ele = this.state.Cart[i]\n            if (ele.name === this.state.Item[id].name) {\n                arrayMatch = true;\n                if (count > 0) {\n                    ele.count = ele.count + parseInt(count)\n                    ele.price = this.state.Item[id].price * ele.count\n                }\n                else {\n                    ele.count = ele.count + 1\n                    ele.price = this.state.Item[id].price * ele.count\n                }\n                break;\n            }\n\n        }\n        if (!arrayMatch && count > 1) {\n\n            let cartItem = {\n                \"id\": id,\n                \"image\": this.state.Item[id].img,\n                \"name\": this.state.Item[id].name,\n                \"des\": this.state.Item[id].desc,\n                \"price\": parseInt(this.state.Item[id].price) * count,\n                \"count\": count\n            }\n            this.state.Cart.push(cartItem)\n            console.log(\"Item Add In Cart \", this.state.Cart)\n        }\n        else if (!arrayMatch) {\n            let cartItem = {\n                \"id\": id,\n                \"image\": this.state.Item[id].img,\n                \"name\": this.state.Item[id].name,\n                \"des\": this.state.Item[id].desc,\n                \"price\": parseInt(this.state.Item[id].price),\n                \"count\": 1\n            }\n            this.state.Cart.push(cartItem)\n            // console.log(\"Item Add In Cart \", this.state.Cart)\n\n        }\n        else {\n            console.log(\"Update Count of Item\", this.state.Cart)\n        }\n    }\n\n    // fetch data from json file\n    componentDidMount() {\n\n        fetch('./Data.json')\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({\n                    isLoaded: true,\n                    Item: data.items\n                })\n            },\n                (error) => {\n                    this.setState({\n                        error\n                    })\n                }\n            )\n    }\n\n\n\n    render() {\n        const { error, isLoaded, Item, Cart } = this.state\n\n        if (error) {\n            return <div className=\"Title\"><h3>PRODUCTS</h3></div>\n        }\n        else if (!isLoaded) {\n            return <div className=\"Title\"><h3>Loading</h3></div>\n        }\n        else {\n            return (\n                <>\n\n                    <div>\n                        <div className=\"Title\"><h3>PRODUCTS</h3></div>\n                        {this.state.showComponent ? <Popup data={this.state.Item}\n                            id={this.state.showId}\n                            closePopup={this.handleOnImageClick}\n                            handleCart={this.handleClick}\n\n                        /> : null}\n\n                        <div className=\"Cart_items\">\n                            {Item.map((data) => (\n                                <Card className=\"card\" key={data.id}>\n                                    <div className=\"image_container\">\n                                        <Card.Img className=\"Image\" src={data.img} onClick={() => { this.handleOnImageClick(data.id - 1) }} />\n                                        <div className=\"overlay\" src={data.img} onClick={() => { this.handleOnImageClick(data.id - 1) }}>\n                                            \n                                                <div  className=\"icon\">\n                                                <i className=\"fa fa-search\"></i>\n                                                </div>\n                                          \n                                        </div>\n                                    </div>\n\n                                    <Card.Body className=\"Card_body\">\n                                        <Card.Title >{data.name}</Card.Title>\n                                        <Card.Text>{data.desc}</Card.Text>\n                                        <Card.Text>${data.price}</Card.Text>\n                                        <Button className=\"btn_add\" variant=\"primary\" onClick={() => { this.handleClick(data.id - 1) }}>Add To Cart</Button>\n                                    </Card.Body>\n                                </Card>\n                            ))}\n                        </div>\n                      \n\n                        <Rightcart\n\n                            cartItem={Cart}\n                            clearCart={this.handleClearCart}\n\n                            deleteFromCart={this.handleDelete}\n                            increment={this.handleIncrement}\n                            decrement={this.handleDecrement}\n\n                        />\n\n                        {this.state.showPayment ? <Checkoutarea cartItem={Cart} /> : null}\n\n                    </div>\n                </>\n            )\n        }\n    }\n}\n\n","import React from 'react';\nimport Header from './header/Header'\nimport Cart from './cart/Cart'\n\nimport './App.css';\n\nfunction App() {\n  let cartData = []\n  \n  \n  return (\n    <>\n    <Header />\n    <Cart cartProps= {cartData} />\n    \n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}